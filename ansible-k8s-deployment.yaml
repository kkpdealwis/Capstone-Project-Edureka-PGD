---
- name: Deploy xyz-application to k8s cluster
  hosts: aws_ec2
  remote_user: ubuntu
  tasks:
  - name: copy deployment.yaml file to k8s master node
    copy:
      src: deployment.yaml
      dest: /home/ubuntu/deployment-xyz-application.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply xyz application deployment
    command: kubectl apply -f /home/ubuntu/deployment-xyz-application.yaml
  - name: Copy service.yaml file to target machine
    copy:
      src: service.yaml
      dest: /home/ubuntu/service-xyz-application.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply xyz application service
    command: kubectl apply -f /home/ubuntu/service-xyz-application.yaml
  - name: check namespace monitoring
    command: kubectl get namespace monitoring -o custom-columns=NAME:.metadata.name --no-headers
    register: namespace_check
    ignore_errors: yes
  - name: create namespace monitoring
    command: kubectl create namespace monitoring
    when: namespace_check.rc != 0
  - name: copy storage-class.yaml file to k8s master node
    copy:
      src: storage-class.yaml
      dest: /home/ubuntu/storage-class.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: check storage class ebs-sc
    command: kubectl apply -f /home/ubuntu/storage-class.yaml
  - name: check cluster role prometheus
    command: kubectl get clusterrole prometheus -o custom-columns=NAME:.metadata.name --no-headers
    register: cluster_role_check
    ignore_errors: yes
  - name: copy clusterRole.yaml file to k8s master node
    copy: 
      src: clusterRole.yaml
      dest: /home/ubuntu/clusterRole.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
    when: cluster_role_check.rc != 0
  - name: create clusterRole in k8s master node
    command: kubectl create -f /home/ubuntu/clusterRole.yaml
    when: cluster_role_check.rc != 0
  - name: copy prometheus config map to k8s master node
    copy:
      src: config-map.yaml
      dest: /home/ubuntu/config-map-promethues.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: create prometheus configmap on monitoring namespace
    command: kubectl apply -f /home/ubuntu/config-map-promethues.yaml
  - name: copy prometheus-pvc.yaml
    copy:
      src: prometheus-pvc.yaml
      dest: /home/ubuntu/prometheus-pvc.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply prometheus pvc
    command: kubectl apply -f /home/ubuntu/prometheus-pvc.yaml --namespace=monitoring
  - name: copy prometheus deployment
    copy:
      src: prometheus-deployment.yaml
      dest: /home/ubuntu/prometheus-deployment.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply prometheus deployment
    command: kubectl apply -f /home/ubuntu/prometheus-deployment.yaml --namespace=monitoring
  - name: copy prometheus-service.yaml
    copy:
      src: prometheus-service.yaml
      dest: /home/ubuntu/prometheus-service.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply prometheus service
    command: kubectl apply -f prometheus-service.yaml --namespace=monitoring
  - name: copy /home/ubuntu/grafana-datasource-config.yaml
    copy:
      src: grafana-datasource-config.yaml
      dest: /home/ubuntu/grafana-datasource-config.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply grafana-datasource-config.yaml
    command: kubectl apply -f /home/ubuntu/grafana-datasource-config.yaml --namespace=monitoring
  - name: copy grafana-pvc.yaml
    copy:
      src: grafana-pvc.yaml
      dest: /home/ubuntu/grafana-pvc.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply grafana-pvc.yaml
    command: kubectl apply -f /home/ubuntu/grafana-pvc.yaml --namespace=monitoring
  - name: copy grafana-deployment.yaml
    copy:
      src: grafana-deployment.yaml
      dest: /home/ubuntu/grafana-deployment.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply grafana deployment.yaml
    command: kubectl apply -f /home/ubuntu/grafana-deployment.yaml --namespace=monitoring
  - name: copy grafana-service.yaml
    copy:
      src: grafana-service.yaml
      dest: /home/ubuntu/grafana-service.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply grafana-service.yaml
    command: kubectl apply -f /home/ubuntu/grafana-service.yaml --namespace=monitoring
  - name: install nginx-ingress-controller
    command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml
  - name: copy nginx-ingress-controller.yaml
    copy:
      src: nginx-ingress.yaml
      dest: /home/ubuntu/nginx-ingress.yaml
      owner: ubuntu
      group: ubuntu
      force: yes
  - name: apply nginx-ingress-controller.yaml
    command: kubectl apply -f /home/ubuntu/nginx-ingress.yaml
    
    
    
      
    
    
    
      
